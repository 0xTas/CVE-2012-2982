use clap::Parser;

#[derive(Debug, Parser)]
#[command(author, version)]
pub struct Args {
    /// The IP or hostname of the remote host.
    pub rhost: String,

    /// The IP for your reverse shell payload to reach back to.
    pub lhost: String,

    /// The username for the compromised Webmin instance.
    pub user: String,

    /// The password for the compromised Webmin instance.
    pub pass: String,

    /// The remote port of the vulnerable service (default 10000).
    #[arg(long, default_value_t = 10000)]
    pub rport: u16,

    /// The local port to listen on (default 1337).
    #[arg(long, default_value_t = 1337)]
    pub lport: u16,

    /// Skips automatically starting a netcat listener to catch the reverse shell.
    #[arg(short, long, default_value_t = false)]
    pub dont_listen: bool,

    /// A custom payload to use instead of a typical bash reverse shell.
    #[arg(long)]
    pub payload: Option<String>
}